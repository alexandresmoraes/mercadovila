// <auto-generated />
using System;
using Compras.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Compras.Infra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Compras.Domain.Aggregates.Compra", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("DataHora")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datahora");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric")
                        .HasColumnName("total");

                    b.Property<string>("comprador_id")
                        .IsRequired()
                        .HasColumnType("character varying(36)");

                    b.HasKey("Id");

                    b.HasIndex("comprador_id");

                    b.ToTable("compras", (string)null);
                });

            modelBuilder.Entity("Compras.Domain.Aggregates.Comprador", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)")
                        .HasColumnName("user_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("email");

                    b.Property<string>("FotoUrl")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("foto_url");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("nome");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("usuario_username");

                    b.HasKey("UserId");

                    b.ToTable("compradores", (string)null);
                });

            modelBuilder.Entity("Compras.Domain.Aggregates.CompraItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CompraId")
                        .HasColumnType("bigint")
                        .HasColumnName("compra_id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<int>("EstoqueAtual")
                        .HasColumnType("integer")
                        .HasColumnName("estoque_atual");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image_url");

                    b.Property<bool>("IsPrecoMedioSugerido")
                        .HasColumnType("boolean")
                        .HasColumnName("preco_medio_sugerido");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<decimal>("PrecoPago")
                        .HasColumnType("numeric")
                        .HasColumnName("preco_pago");

                    b.Property<decimal>("PrecoSugerido")
                        .HasColumnType("numeric")
                        .HasColumnName("preco_sugerido");

                    b.Property<string>("ProdutoId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)")
                        .HasColumnName("produto_id");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("unidade_medida");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.ToTable("compra_itens", (string)null);
                });

            modelBuilder.Entity("Compras.Domain.Aggregates.Compra", b =>
                {
                    b.HasOne("Compras.Domain.Aggregates.Comprador", "Comprador")
                        .WithMany()
                        .HasForeignKey("comprador_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comprador");
                });

            modelBuilder.Entity("Compras.Domain.Aggregates.CompraItem", b =>
                {
                    b.HasOne("Compras.Domain.Aggregates.Compra", "Compra")
                        .WithMany("CompraItens")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");
                });

            modelBuilder.Entity("Compras.Domain.Aggregates.Compra", b =>
                {
                    b.Navigation("CompraItens");
                });
#pragma warning restore 612, 618
        }
    }
}
